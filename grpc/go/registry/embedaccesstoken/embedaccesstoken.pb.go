// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: registry/embedaccesstoken/embedaccesstoken.proto

package embedaccesstoken

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EmbedAccessTokenRequest is the request message for the Get rpc.
type EmbedAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// filters is the list of filters to apply to the request.
	Filters []*EmbedAccessTokenRequest_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	// customer_id is the customer id associated with the access token.
	CustomerId *string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3,oneof" json:"customer_id,omitempty"`
	// display_name is the display name associated with the access token.
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3,oneof" json:"display_name,omitempty"`
	// jwt_custom_claims is the custom claims associated with the access token.
	JwtCustomClaims map[string]string `protobuf:"bytes,4,rep,name=jwt_custom_claims,json=jwtCustomClaims,proto3" json:"jwt_custom_claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// permissions is the permissions associated with the access token.
	Permissions []string `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *EmbedAccessTokenRequest) Reset() {
	*x = EmbedAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedAccessTokenRequest) ProtoMessage() {}

func (x *EmbedAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*EmbedAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescGZIP(), []int{0}
}

func (x *EmbedAccessTokenRequest) GetFilters() []*EmbedAccessTokenRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *EmbedAccessTokenRequest) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *EmbedAccessTokenRequest) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *EmbedAccessTokenRequest) GetJwtCustomClaims() map[string]string {
	if x != nil {
		return x.JwtCustomClaims
	}
	return nil
}

func (x *EmbedAccessTokenRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// EmbedAccessTokenResponse is the response message for the Get rpc.
type EmbedAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// access_token is a token that allows access to an embed.
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *EmbedAccessTokenResponse) Reset() {
	*x = EmbedAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedAccessTokenResponse) ProtoMessage() {}

func (x *EmbedAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*EmbedAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescGZIP(), []int{1}
}

func (x *EmbedAccessTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// Filter represents a filter to be applied to the request.
type EmbedAccessTokenRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is the key of the filter.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// operator is the operator of the filter.
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	// value is the value of the filter.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EmbedAccessTokenRequest_Filter) Reset() {
	*x = EmbedAccessTokenRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedAccessTokenRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedAccessTokenRequest_Filter) ProtoMessage() {}

func (x *EmbedAccessTokenRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedAccessTokenRequest_Filter.ProtoReflect.Descriptor instead.
func (*EmbedAccessTokenRequest_Filter) Descriptor() ([]byte, []int) {
	return file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EmbedAccessTokenRequest_Filter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EmbedAccessTokenRequest_Filter) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *EmbedAccessTokenRequest_Filter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_registry_embedaccesstoken_embedaccesstoken_proto protoreflect.FileDescriptor

var file_registry_embedaccesstoken_embedaccesstoken_proto_rawDesc = []byte{
	0x0a, 0x30, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf4, 0x03, 0x0a, 0x17, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4a, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x6a, 0x0a, 0x11, 0x6a, 0x77,
	0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4a, 0x77, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6a, 0x77, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4c, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x42, 0x0a, 0x14, 0x4a, 0x77, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x18, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x79, 0x0a, 0x17, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x6d, 0x0a, 0x1d, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x70, 0x65,
	0x61, 0x6b, 0x65, 0x61, 0x73, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x61, 0x73, 0x79, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x61, 0x73, 0x79, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescOnce sync.Once
	file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescData = file_registry_embedaccesstoken_embedaccesstoken_proto_rawDesc
)

func file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescGZIP() []byte {
	file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescOnce.Do(func() {
		file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescData = protoimpl.X.CompressGZIP(file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescData)
	})
	return file_registry_embedaccesstoken_embedaccesstoken_proto_rawDescData
}

var file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_registry_embedaccesstoken_embedaccesstoken_proto_goTypes = []interface{}{
	(*EmbedAccessTokenRequest)(nil),        // 0: embedaccesstoken.EmbedAccessTokenRequest
	(*EmbedAccessTokenResponse)(nil),       // 1: embedaccesstoken.EmbedAccessTokenResponse
	(*EmbedAccessTokenRequest_Filter)(nil), // 2: embedaccesstoken.EmbedAccessTokenRequest.Filter
	nil,                                    // 3: embedaccesstoken.EmbedAccessTokenRequest.JwtCustomClaimsEntry
}
var file_registry_embedaccesstoken_embedaccesstoken_proto_depIdxs = []int32{
	2, // 0: embedaccesstoken.EmbedAccessTokenRequest.filters:type_name -> embedaccesstoken.EmbedAccessTokenRequest.Filter
	3, // 1: embedaccesstoken.EmbedAccessTokenRequest.jwt_custom_claims:type_name -> embedaccesstoken.EmbedAccessTokenRequest.JwtCustomClaimsEntry
	0, // 2: embedaccesstoken.EmbedAccessTokenService.Get:input_type -> embedaccesstoken.EmbedAccessTokenRequest
	1, // 3: embedaccesstoken.EmbedAccessTokenService.Get:output_type -> embedaccesstoken.EmbedAccessTokenResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_registry_embedaccesstoken_embedaccesstoken_proto_init() }
func file_registry_embedaccesstoken_embedaccesstoken_proto_init() {
	if File_registry_embedaccesstoken_embedaccesstoken_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedAccessTokenRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registry_embedaccesstoken_embedaccesstoken_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_embedaccesstoken_embedaccesstoken_proto_goTypes,
		DependencyIndexes: file_registry_embedaccesstoken_embedaccesstoken_proto_depIdxs,
		MessageInfos:      file_registry_embedaccesstoken_embedaccesstoken_proto_msgTypes,
	}.Build()
	File_registry_embedaccesstoken_embedaccesstoken_proto = out.File
	file_registry_embedaccesstoken_embedaccesstoken_proto_rawDesc = nil
	file_registry_embedaccesstoken_embedaccesstoken_proto_goTypes = nil
	file_registry_embedaccesstoken_embedaccesstoken_proto_depIdxs = nil
}
