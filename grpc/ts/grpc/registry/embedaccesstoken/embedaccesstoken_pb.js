// source: registry/embedaccesstoken/embedaccesstoken.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.embedaccesstoken.EmbedAccessTokenRequest', null, global);
goog.exportSymbol('proto.embedaccesstoken.EmbedAccessTokenRequest.Filter', null, global);
goog.exportSymbol('proto.embedaccesstoken.EmbedAccessTokenResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.embedaccesstoken.EmbedAccessTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.embedaccesstoken.EmbedAccessTokenRequest.repeatedFields_, null);
};
goog.inherits(proto.embedaccesstoken.EmbedAccessTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.embedaccesstoken.EmbedAccessTokenRequest.displayName = 'proto.embedaccesstoken.EmbedAccessTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.embedaccesstoken.EmbedAccessTokenRequest.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.displayName = 'proto.embedaccesstoken.EmbedAccessTokenRequest.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.embedaccesstoken.EmbedAccessTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.embedaccesstoken.EmbedAccessTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.embedaccesstoken.EmbedAccessTokenResponse.displayName = 'proto.embedaccesstoken.EmbedAccessTokenResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.embedaccesstoken.EmbedAccessTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.embedaccesstoken.EmbedAccessTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.toObject, includeInstance),
    customerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    jwtCustomClaimsMap: (f = msg.getJwtCustomClaimsMap()) ? f.toObject(includeInstance, undefined) : [],
    permissionsMap: (f = msg.getPermissionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.embedaccesstoken.EmbedAccessTokenRequest;
  return proto.embedaccesstoken.EmbedAccessTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.embedaccesstoken.EmbedAccessTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.embedaccesstoken.EmbedAccessTokenRequest.Filter;
      reader.readMessage(value,proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = msg.getJwtCustomClaimsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = msg.getPermissionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.embedaccesstoken.EmbedAccessTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.embedaccesstoken.EmbedAccessTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getJwtCustomClaimsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getPermissionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.embedaccesstoken.EmbedAccessTokenRequest.Filter;
  return proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string operator = 2;
 * @return {string}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.setOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.Filter.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Filter filters = 1;
 * @return {!Array<!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter>}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.embedaccesstoken.EmbedAccessTokenRequest.Filter, 1));
};


/**
 * @param {!Array<!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter>} value
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
*/
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest.Filter}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.embedaccesstoken.EmbedAccessTokenRequest.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * optional string customer_id = 2;
 * @return {string}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.clearCustomerId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.hasCustomerId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.setDisplayName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.clearDisplayName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.hasDisplayName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> jwt_custom_claims = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.getJwtCustomClaimsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.clearJwtCustomClaimsMap = function() {
  this.getJwtCustomClaimsMap().clear();
  return this;};


/**
 * map<string, bool> permissions = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.getPermissionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenRequest} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenRequest.prototype.clearPermissionsMap = function() {
  this.getPermissionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.embedaccesstoken.EmbedAccessTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.embedaccesstoken.EmbedAccessTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessToken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenResponse}
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.embedaccesstoken.EmbedAccessTokenResponse;
  return proto.embedaccesstoken.EmbedAccessTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.embedaccesstoken.EmbedAccessTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.embedaccesstoken.EmbedAccessTokenResponse}
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.embedaccesstoken.EmbedAccessTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.embedaccesstoken.EmbedAccessTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string access_token = 1;
 * @return {string}
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.embedaccesstoken.EmbedAccessTokenResponse} returns this
 */
proto.embedaccesstoken.EmbedAccessTokenResponse.prototype.setAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.embedaccesstoken);
